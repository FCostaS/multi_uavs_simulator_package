<?xml version='1.0'?>
<launch>

   <!-- start world -->

   <arg name="simRate" default="nan"/>
  <!-- Enable simulation clock -->
  <param name="use_sim_time" type="bool" value="true" />

  
  <arg name="world_name" default="$(find multi_uav)/worlds/empty.world" />
  <arg name="gui" value="true" />
  <arg name="headless" value="false" /> 

  <!-- <env name="GAZEBO_MODEL_PATH" value="$(find ardupilot_sitl_gazebo_plugin)/meshes/meshes_sensors"/>
	-->
  <env name="GAZEBO_MODEL_PATH" value="$(find drcsim_model_resources)/gazebo_models/environments:$(find ardupilot_sitl_gazebo_plugin)/meshes/meshes_sensors:$(find ardupilot_sitl_gazebo_plugin)/meshes/meshes_outdoor:$(find ardupilot_sitl_gazebo_plugin)/meshes/meshes_warehouse"/>


<group ns="group1">                                                <!--group distinguishing label -->

  <arg name="namespace" value="uav1"/>	                           <!--nspace distinguishing label -->
  <arg name="enable_logging" default="true"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="erlecopter_log_1"/>                <!--log distinguishing label -->

  <include file="$(find mavros)/launch/apm_sitl.launch" >
	<!--<arg name="fcu_url" value="tcp://127.0.0.1:5762" />
		<arg name="gcs_url" value="udp://127.0.0.1:14550@" /> -->
	     <arg name="fcu_url" value="udp://127.0.0.1:14550@" />
	     <arg name="gcs_url" value="" />  -->
	     <arg name="tgt_system" value="1" />
	     <arg name="tgt_component" value="1" /> 
  </include> 

  <arg name="name" default="model_uav1"/>                      <!--model distinguishing label -->
  <arg name="urdffile_sent_to_paramserver" default="$(find multi_uav)/urdf/erlecopter_base.xacro"/>
  	<!--<arg name="tf_prefix" default="$(arg namespace)"/> -->
  <arg name="tf_prefix" default="tf_prefix_1"/>                <!--tf_prefix distinguishing label -->
<!--  <arg name="debug" default="true"/> -->
  <arg name="verbose" default="true"/>



  <!-- Initial pose for the drone -->
  <arg name="x" default="1.99"/> <!-- [m], positive to the North -->
  <arg name="y" default="0"/> <!-- [m], negative to the East -->
  <arg name="z" default="0.08"/> <!-- [m], positive Up -->
  <arg name="roll" default="0"/> <!-- [rad] -->
  <arg name="pitch" default="0"/> <!-- [rad] -->
  <arg name="yaw" default="0"/> <!-- [rad], negative clockwise -->

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="
    $(find xacro)/xacro --inorder '$(arg urdffile_sent_to_paramserver)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    log_file:=$(arg log_file)
    nspace:=$(arg namespace)" 
  />
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
	
	

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_erlecopter" pkg="gazebo_ros" type="spawn_model"
   args="-param robot_description
         -urdf
         -x $(arg x)
         -y $(arg y)
         -z $(arg z)
         -R $(arg roll)
         -P $(arg pitch)
         -Y $(arg yaw)
         -model $(arg name)"
   respawn="false" output="screen" >
  </node>	
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen"/>

</group>

 <group ns="group2">                                                <!--group distinguishing label -->

  <arg name="namespace" value="uav2"/>	                           <!--nspace distinguishing label -->
  <arg name="enable_logging" default="true"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="erlecopter_log_2"/>                 <!--log distinguishing label -->

  <include file="$(find mavros)/launch/apm_sitl.launch" >
	<!--	<arg name="fcu_url" value="tcp://127.0.0.1:5760" />
		<arg name="gcs_url" value="udp://:14550@" /> -->
	     <arg name="fcu_url" value="udp://127.0.0.1:14560@" />
	     <arg name="gcs_url" value="" />
	     <arg name="tgt_system" value="1" />
	     <arg name="tgt_component" value="1" /> 
  </include> 

  <arg name="name" default="model_uav2"/>       <!--model distinguishing label -->
  <arg name="urdffile_sent_to_paramserver" default="$(find multi_uav)/urdf/erlecopter_base.xacro"/>
  	<!--<arg name="tf_prefix" default="$(arg namespace)"/> -->
  <arg name="tf_prefix" default="tf_prefix_2"/>              <!--tf_prefix distinguishing label -->
<!--  <arg name="debug" default="true"/> -->
  <arg name="verbose" default="true"/>



  <!-- Initial pose for the drone -->
  <arg name="x" default="0"/> <!-- [m], positive to the North -->
  <arg name="y" default="3"/> <!-- [m], negative to the East -->
  <arg name="z" default="0.08"/> <!-- [m], positive Up -->
  <arg name="roll" default="0"/> <!-- [rad] -->
  <arg name="pitch" default="0"/> <!-- [rad] -->
  <arg name="yaw" default="0"/> <!-- [rad], negative clockwise -->

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="
    $(find xacro)/xacro --inorder '$(arg urdffile_sent_to_paramserver)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    log_file:=$(arg log_file)
    nspace:=$(arg namespace)" 
  />
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
	
	

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_erlecopter" pkg="gazebo_ros" type="spawn_model"
   args="-param robot_description
         -urdf
         -x $(arg x)
         -y $(arg y)
         -z $(arg z)
         -R $(arg roll)
         -P $(arg pitch)
         -Y $(arg yaw)
         -model $(arg name)"
   respawn="false" output="screen" >
  </node>	
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen"/>

</group>  


 <group ns="group3">                                                     <!--group distinguishing label -->

  <arg name="namespace" value="uav3"/>	                                 <!--nspace distinguishing label -->
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="erlecopter_log_3"/>                        <!--log distinguishing label -->

  <include file="$(find mavros)/launch/apm_sitl.launch" >
	<!--	<arg name="fcu_url" value="tcp://127.0.0.1:5760" />
		<arg name="gcs_url" value="udp://:14550@" /> -->
	     <arg name="fcu_url" value="udp://127.0.0.1:14570@" />         <!-- mavros connect url -->
	     <arg name="gcs_url" value="" />
	     <arg name="tgt_system" value="1" />
	     <arg name="tgt_component" value="1" /> 
  </include> 

  <arg name="name" default="model_uav3"/>                                <!--model distinguishing label -->
  <arg name="urdffile_sent_to_paramserver" default="$(find multi_uav)/urdf/erlecopter_base.xacro"/>
  	<!--<arg name="tf_prefix" default="$(arg namespace)"/> -->
  <arg name="tf_prefix" default="tf_prefix_3"/>                         <!--tf_prefix distinguishing label -->
<!--  <arg name="debug" default="true"/> -->
  <arg name="verbose" default="true"/>



  <!-- Initial pose for the drone -->
  <arg name="x" default="-3"/> <!-- [m], positive to the North -->
  <arg name="y" default="4"/> <!-- [m], negative to the East -->
  <arg name="z" default="0.08"/> <!-- [m], positive Up -->
  <arg name="roll" default="0"/> <!-- [rad] -->
  <arg name="pitch" default="0"/> <!-- [rad] -->
  <arg name="yaw" default="0"/> <!-- [rad], negative clockwise -->

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="
    $(find xacro)/xacro --inorder '$(arg urdffile_sent_to_paramserver)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    log_file:=$(arg log_file)
    nspace:=$(arg namespace)" 
  />
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
	
	

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_erlecopter" pkg="gazebo_ros" type="spawn_model"
   args="-param robot_description
         -urdf
         -x $(arg x)
         -y $(arg y)
         -z $(arg z)
         -R $(arg roll)
         -P $(arg pitch)
         -Y $(arg yaw)
         -model $(arg name)"
   respawn="false" output="screen" >
  </node>	
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen"/>

</group> 


 <group ns="group4">                                                     <!--group distinguishing label -->

  <arg name="namespace" value="uav4"/>	                                 <!--nspace distinguishing label -->
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="erlecopter_log_4"/>                        <!--log distinguishing label -->

  <include file="$(find mavros)/launch/apm_sitl.launch" >
	<!--	<arg name="fcu_url" value="tcp://127.0.0.1:5760" />
		<arg name="gcs_url" value="udp://:14550@" /> -->
	     <arg name="fcu_url" value="udp://127.0.0.1:14580@" />         <!-- mavros connect url -->
	     <arg name="gcs_url" value="" />
	     <arg name="tgt_system" value="1" />
	     <arg name="tgt_component" value="1" /> 
  </include> 

  <arg name="name" default="model_uav4"/>                                <!--model distinguishing label -->
  <arg name="urdffile_sent_to_paramserver" default="$(find multi_uav)/urdf/erlecopter_base.xacro"/>
  	<!--<arg name="tf_prefix" default="$(arg namespace)"/> -->
  <arg name="tf_prefix" default="tf_prefix_4"/>                         <!--tf_prefix distinguishing label -->
<!--  <arg name="debug" default="true"/> -->
  <arg name="verbose" default="true"/>



  <!-- Initial pose for the drone -->
  <arg name="x" default="-3"/> <!-- [m], positive to the North -->
  <arg name="y" default="-4"/> <!-- [m], negative to the East -->
  <arg name="z" default="0.08"/> <!-- [m], positive Up -->
  <arg name="roll" default="0"/> <!-- [rad] -->
  <arg name="pitch" default="0"/> <!-- [rad] -->
  <arg name="yaw" default="0"/> <!-- [rad], negative clockwise -->

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="
    $(find xacro)/xacro --inorder '$(arg urdffile_sent_to_paramserver)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    log_file:=$(arg log_file)
    nspace:=$(arg namespace)" 
  />
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
	
	

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_erlecopter" pkg="gazebo_ros" type="spawn_model"
   args="-param robot_description
         -urdf
         -x $(arg x)
         -y $(arg y)
         -z $(arg z)
         -R $(arg roll)
         -P $(arg pitch)
         -Y $(arg yaw)
         -model $(arg name)"
   respawn="false" output="screen" >
  </node>	
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen"/>

</group> 

<group ns="group5">                                                     <!--group distinguishing label -->

  <arg name="namespace" value="uav5"/>	                                 <!--nspace distinguishing label -->
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="erlecopter_log_5"/>                        <!--log distinguishing label -->

  <include file="$(find mavros)/launch/apm_sitl.launch" >
	<!--	<arg name="fcu_url" value="tcp://127.0.0.1:5760" />
		<arg name="gcs_url" value="udp://:14550@" /> -->
	     <arg name="fcu_url" value="udp://127.0.0.1:14590@" />         <!-- mavros connect url -->
	     <arg name="gcs_url" value="" />
	     <arg name="tgt_system" value="1" />
	     <arg name="tgt_component" value="1" /> 
  </include> 

  <arg name="name" default="model_uav5"/>                                <!--model distinguishing label -->
  <arg name="urdffile_sent_to_paramserver" default="$(find multi_uav)/urdf/erlecopter_base.xacro"/>
  	<!--<arg name="tf_prefix" default="$(arg namespace)"/> -->
  <arg name="tf_prefix" default="tf_prefix_5"/>                         <!--tf_prefix distinguishing label -->
<!--  <arg name="debug" default="true"/> -->
  <arg name="verbose" default="true"/>



  <!-- Initial pose for the drone -->
  <arg name="x" default="0"/> <!-- [m], positive to the North -->
  <arg name="y" default="-3"/> <!-- [m], negative to the East -->
  <arg name="z" default="0.08"/> <!-- [m], positive Up -->
  <arg name="roll" default="0"/> <!-- [rad] -->
  <arg name="pitch" default="0"/> <!-- [rad] -->
  <arg name="yaw" default="0"/> <!-- [rad], negative clockwise -->

  <!-- send the robot XML to param server -->
  <param name="robot_description" command="
    $(find xacro)/xacro --inorder '$(arg urdffile_sent_to_paramserver)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    log_file:=$(arg log_file)
    nspace:=$(arg namespace)" 
  />
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
	
	

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_erlecopter" pkg="gazebo_ros" type="spawn_model"
   args="-param robot_description
         -urdf
         -x $(arg x)
         -y $(arg y)
         -z $(arg z)
         -R $(arg roll)
         -P $(arg pitch)
         -Y $(arg yaw)
         -model $(arg name)"
   respawn="false" output="screen" >
  </node>	
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen"/>

</group>


  <include file="$(find multi_uav)/launch/empty_world.launch">
    <arg name="paused" value="true"/>  
    <arg name="headless" value="$(arg headless)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="verbose" value="true" />
  </include>

</launch>
